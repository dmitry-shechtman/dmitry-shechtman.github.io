<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Silverlight Usage</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="howto" /><meta name="Microsoft.Help.Id" content="f175305f-89a6-498e-add6-e803be90433e" /><meta name="Description" content="This topic explains how to create AsyncInit asynchronously initialized types with AsyncInit on Silverlight 4 and 5." /><meta name="Microsoft.Help.ContentType" content="How To" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">AsyncInit<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a920d297-289f-46ea-aa8b-338f484ad83c.htm" title="AsyncInit" tocid="roottoc">AsyncInit</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c0f9e874-dd33-473b-a245-85fc69447a4b.htm" title="How Tos" tocid="c0f9e874-dd33-473b-a245-85fc69447a4b">How Tos</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="2ac5864f-d7ba-4ef7-a487-77ecfc2aab3a.htm" title="Installation" tocid="2ac5864f-d7ba-4ef7-a487-77ecfc2aab3a">Installation</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="edeb370d-6d7e-4f82-adab-f2326d89c857.htm" title="Deriving" tocid="edeb370d-6d7e-4f82-adab-f2326d89c857">Deriving</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c731bb1a-010a-40c6-856b-421ebbd05a26.htm" title="Implementing" tocid="c731bb1a-010a-40c6-856b-421ebbd05a26">Implementing</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="f175305f-89a6-498e-add6-e803be90433e.htm" title="Silverlight" tocid="f175305f-89a6-498e-add6-e803be90433e">Silverlight</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn">Silverlight Usage</td></tr></table><span class="introStyle"></span><div class="summary"><p>This topic explains how to create AsyncInit asynchronously initialized types with AsyncInit on Silverlight 4 and 5.</p></div><div class="introduction"><p>Silverlight 4 and 5 won't allow anyone other than the declaring type access to private members, requiring a slightly different procedure.</p></div><div class="subSection"><ol><li><p>Declare an <span class="code">internal</span> (rather than <span class="code">private</span>) constructor:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAABAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">internal</span> UniversalAnswerService()
: <span class="highlight-keyword">base</span>(<span class="highlight-keyword">null</span>)
{
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABAEAAA");</script></li><li><p>
            Expose it to <span class="code">Ditto.AsyncInit</span> by adding the following to <span class="code">Properties\AssemblyInfo.cs</span>:
          </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[assembly: InternalsVisibleTo(<span class="highlight-literal">"Ditto.AsyncInit"</span>)]</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAEAAA");</script></li></ol></div><strong>Done!</strong> Your class may now be consumed asynchronously:
      <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> service = <span class="highlight-keyword">await</span> UniversalAnswerService.CreateAsync(progress, cancellationToken);
<span class="highlight-keyword">var</span> answer = service.Answer;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAACAAA");</script></div>Since all asynchronously initialized types must declare internal constructors (on Silverlight), it is advisable to keep them in an assembly of their own, in order to prevent others from inadvertently accessing uninitialized instances thereof.<div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="c0f9e874-dd33-473b-a245-85fc69447a4b.htm">How Tos</a></div><div class="seeAlsoStyle"><a href="edeb370d-6d7e-4f82-adab-f2326d89c857.htm">Deriving from an AsyncInit Base Class</a></div><div class="seeAlsoStyle"><a href="" target="_blank">Blog post detailing the issue</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © Dmitry Shechtman 2014-2015</p></div></body></html>